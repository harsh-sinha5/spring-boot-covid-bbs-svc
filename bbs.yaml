swagger: '2.0'
info:
  description: Api Documentation
  version: '1.0'
  title: Api Documentation
  termsOfService: urn:tos
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
host: localhost:8081
basePath: /
tags:
  - name: basic-error-controller
    description: Basic Error Controller
  - name: bbs-api-controller
    description: Bbs Api Controller
paths:
  /bbs/_autoConfirm:
    post:
      tags:
        - bbs-api-controller
      summary: autoConfirm
      description: This API will be used to auto book the bed when thereis an availability in the hospital bed of a particular pin code
      operationId: autoConfirm
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: X-Token-ID
          in: header
          description: A JWT token which will be returned as part of login and will have user role details.
          required: true
          type: string
        - in: body
          name: autoConfirmRequest
          description: Hospital Infromation for confirmation
          required: true
          schema:
            $ref: '#/definitions/BookingConfirmRequest'
      responses:
        '200':
          description: Returns true or false based on the successfull and unsuccessfull posting
        '201':
          description: Created
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: School Not Found
          schema:
            $ref: '#/definitions/Error'
        '405':
          description: Validation Exception
          schema:
            $ref: '#/definitions/Error'
      deprecated: false
  /bbs/_book:
    post:
      tags:
        - bbs-api-controller
      summary: reserveBed
      description: This API will be used to book the bed for their ward. Bookign will be done only when the user is logged in. If user is niot logged in then booking will be not done
      operationId: reserveBed
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: X-Token-ID
          in: header
          description: A JWT token which will be returned as part of login and will have user role details.
          required: true
          type: string
        - in: body
          name: bookingUserData
          description: Patient information to book the bed.
          required: true
          schema:
            $ref: '#/definitions/BookingUserData'
      responses:
        '200':
          description: Returns true or false based on the successfull and unsuccessfull posting
          schema:
            $ref: '#/definitions/BookingResponse'
        '201':
          description: Created
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: School Not Found
          schema:
            $ref: '#/definitions/Error'
        '405':
          description: Validation Exception
          schema:
            $ref: '#/definitions/Error'
      deprecated: false
  /bbs/{bookingId}/_confirm:
    put:
      tags:
        - bbs-api-controller
      summary: confirmBooking
      description: Confirm the booking with booking id. This API will be executed by citizen once they will select and specific bed from specific hospital abd then confirm it
      operationId: confirmBooking
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: X-Token-ID
          in: header
          description: A JWT token which will be returned as part of login and will have user role details.
          required: true
          type: string
        - name: bookingId
          in: path
          description: Booking id of booking.
          required: true
          type: string
        - in: body
          name: bookingUserData
          description: Patient information to book the bed.
          required: true
          schema:
            $ref: '#/definitions/BookingConfirmRequest'
      responses:
        '200':
          description: Returns Booking confirm response when user confirm it.
          schema:
            $ref: '#/definitions/BookingConfirmResponse'
        '201':
          description: Created
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: School Not Found
          schema:
            $ref: '#/definitions/Error'
        '405':
          description: Validation Exception
          schema:
            $ref: '#/definitions/Error'
      deprecated: false
  /bbs/{bookingId}/_delete:
    delete:
      tags:
        - bbs-api-controller
      summary: Delete the booking
      description: Confirm the booking with booking id
      operationId: deleteBooking
      produces:
        - '*/*'
      parameters:
        - name: X-Token-ID
          in: header
          description: A JWT token which will be returned as part of login and will have user role details.
          required: true
          type: string
        - name: bookingId
          in: path
          description: Booking id of booking.
          required: true
          type: string
      responses:
        '200':
          description: Returns true or false based on the successfull and unsuccessfull posting
          schema:
            type: boolean
        '204':
          description: No Content
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: School Not Found
          schema:
            $ref: '#/definitions/Error'
        '405':
          description: Validation Exception
          schema:
            $ref: '#/definitions/Error'
      deprecated: false
  /bbs/{bookingId}/_status/:
    get:
      tags:
        - bbs-api-controller
      summary: Get Booking Booking Status
      description: Get booking status with booking id
      operationId: getBookingStatus
      produces:
        - '*/*'
      parameters:
        - name: X-Token-ID
          in: header
          description: A JWT token which will be returned as part of login and will have user role details.
          required: true
          type: string
        - name: bookingId
          in: path
          description: Booking id of booking.
          required: true
          type: string
      responses:
        '200':
          description: Returns true or false based on the successfull and unsuccessfull posting
          schema:
            $ref: '#/definitions/BookingConfirmResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: School Not Found
          schema:
            $ref: '#/definitions/Error'
        '405':
          description: Validation Exception
          schema:
            $ref: '#/definitions/Error'
      deprecated: false
  /error:
    get:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    head:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingHEAD
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
    post:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    put:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    delete:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingDELETE
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
    options:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingOPTIONS
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
    patch:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingPATCH
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
definitions:
  Bed:
    type: object
    properties:
      bed-facility:
        type: string
        description: With (Oxygen, Ventilator, None)
      bed-id:
        type: string
      bed-type:
        type: string
        description: Bed type (Single, Double, General)
    title: Bed
  BedBookingStatusResponse:
    type: object
    properties:
      Hospital:
        $ref: '#/definitions/HospitalConfirm'
      bookingId:
        type: string
        description: A booking id for the the booking
      bookingStatus:
        type: string
        description: Booking status (Confirmed, Pending)
    title: BedBookingStatusResponse
  BookingConfirmRequest:
    type: object
    properties:
      Bed:
        $ref: '#/definitions/Bed'
      LocationDetail:
        $ref: '#/definitions/Location'
      hospital-branch-id:
        type: string
      hospital-id:
        type: string
      hospital-name:
        type: string
    title: BookingConfirmRequest
  BookingConfirmResponse:
    type: object
    properties:
      Hospital:
        $ref: '#/definitions/HospitalConfirm'
      bookingId:
        type: string
        description: A booking id for the the booking
      bookingStatus:
        type: string
        description: Booking status (Confirmed, Pending)
    title: BookingConfirmResponse
  BookingResponse:
    type: object
    properties:
      Hospitals:
        type: array
        items:
          $ref: '#/definitions/Hospital'
      bookingId:
        type: string
        description: A booking id for the the booking
      bookingStatus:
        type: string
        description: Booking status (Confirmed, Pending)
      waitingNumber:
        type: string
        description: Waiting number of patient
    title: BookingResponse
  BookingUserData:
    type: object
    properties:
      patient_IdentificationDetail:
        $ref: '#/definitions/Identity'
      patient_LocationDetails:
        $ref: '#/definitions/Location'
      patient_contact_number:
        type: string
        description: User contact number
      patient_email_id:
        type: string
        description: User email id
      patient_first_name:
        type: string
        description: User first name
      patient_last_name:
        type: string
        description: User last name
    title: BookingUserData
  Branch:
    type: object
    properties:
      Beds:
        type: array
        items:
          $ref: '#/definitions/Bed'
      branchId:
        type: string
      branchName:
        type: string
    title: Branch
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      fields:
        type: string
      message:
        type: string
    title: Error
  Hospital:
    type: object
    properties:
      Branches:
        type: array
        description: List of Bed objects.
        items:
          $ref: '#/definitions/Branch'
      hospitalId:
        type: string
      hospitalName:
        type: string
        description: Hospital Name
    title: Hospital
  HospitalConfirm:
    type: object
    properties:
      Bed:
        $ref: '#/definitions/Bed'
      LocationDetail:
        $ref: '#/definitions/Location'
      hospital-branch-id:
        type: string
      hospital-id:
        type: string
      hospital-name:
        type: string
    title: HospitalConfirm
  Identity:
    type: object
    properties:
      aadhar_card:
        type: string
        description: Patient aadhar card
      pan_number:
        type: string
        description: Patient PAN number
    title: Identity
  Location:
    type: object
    properties:
      city_name:
        type: string
        description: City Name
      pin_number:
        type: string
        description: Location PIN number
    title: Location
  ModelAndView:
    type: object
    properties:
      empty:
        type: boolean
      model:
        type: object
      modelMap:
        type: object
        additionalProperties:
          type: object
      reference:
        type: boolean
      status:
        type: string
        enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
      view:
        $ref: '#/definitions/View'
      viewName:
        type: string
    title: ModelAndView
  View:
    type: object
    properties:
      contentType:
        type: string
    title: View
